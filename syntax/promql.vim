if exists("b:current_syntax")
    finish
endif

let b:current_syntax = "promql"

syntax match Number "\<\d*\([Ee][+-]\?\d\+\)\?\>"
syntax match Number "\<\d\+[.]\d*\([Ee][+-]\?\d\+\)\?\>"
syntax match Number "\<[.]\d\+\([Ee][+-]\?\d\+\)\?\>"

" Define parenthesis matching for proper indentation
syntax region promqlParen transparent start='(' end=')' contains=ALLBUT,promqlParenError
syntax match promqlParenError ')'

" Set indentation rules
setlocal indentexpr=GetPromqlIndent()
setlocal indentkeys=0{,0},0),0],!^F,o,O,e
setlocal autoindent

" Indentation function
if !exists("*GetPromqlIndent")
    function GetPromqlIndent()
        let lnum = prevnonblank(v:lnum - 1)
        if lnum == 0
            return 0
        endif

        let ind = indent(lnum)
        let pline = getline(lnum)
        let cline = getline(v:lnum)

        " Outdent for closing brace
        if cline =~ '^\s*}'
            let ind = indent(s:MatchingOpenBrace(v:lnum, cline))
            return ind
        endif

        " Increase indent after an opening brace
        if pline =~ '{\s*$'
            let ind = ind + &sw
        endif

        " Increase indent after an opening parenthesis
        if pline =~ '([^)]*$'
            let ind = ind + &sw
        endif

        " Decrease indent for closing parenthesis
        if cline =~ '^\s*)'
            let ind = indent(s:MatchingOpenParen(v:lnum, cline))
        endif

        return ind
    endfunction

    " Find matching opening parenthesis
    function s:MatchingOpenParen(lnum, line)
        let col = matchend(a:line, '^\s*)')
        call cursor(a:lnum, col)
        let [m_lnum, m_col] = searchpairpos('(', '', ')', 'bW')
        return m_lnum
    endfunction

    function s:MatchingOpenBrace(lnum, line)
        let col = matchend(a:line, '^\s*}')
        call cursor(a:lnum, col)
        let [m_lnum, m_col] = searchpairpos('{', '', '}', 'bW')
        return m_lnum
    endfunction
endif

syntax keyword prometheusKeyword ALERT IF FOR LABELS ANNOTATIONS AND WITH

"Autogenerated with the output from:
" curl -s https://raw.githubusercontent.com/prometheus/prometheus/main/docs/querying/functions.md | egrep -o ' `\w+\([^)]*)`' |sort -u|sed -E 's/.*`([^(]+).*/\1/'|fmt -w60|sed 's/^/syntax keyword prometheusFunction /'

syntax keyword prometheusFunction abs absent absent_over_time acos acosh asin asinh atan atanh
syntax keyword prometheusFunction avg_over_time avg_over_time ceil changes changes clamp
syntax keyword prometheusFunction clamp_max clamp_min cos cosh count_over_time day_of_month
syntax keyword prometheusFunction day_of_week day_of_year days_in_month deg delta deriv
syntax keyword prometheusFunction double_exponential_smoothing exp floor histogram_avg
syntax keyword prometheusFunction histogram_count histogram_fraction histogram_quantile
syntax keyword prometheusFunction histogram_quantile histogram_quantile histogram_stddev
syntax keyword prometheusFunction histogram_stdvar histogram_stdvar histogram_sum
syntax keyword prometheusFunction histogram_sum hour idelta increase info irate label_join
syntax keyword prometheusFunction label_join label_replace label_replace last_over_time ln
syntax keyword prometheusFunction log10 log2 mad_over_time max_over_time min_over_time minute
syntax keyword prometheusFunction month pi predict_linear present_over_time present_over_time
syntax keyword prometheusFunction quantile_over_time rad rate rate rate resets resets round
syntax keyword prometheusFunction scalar sgn sin sinh sort sort_by_label sort_by_label_desc
syntax keyword prometheusFunction sort_desc sqrt stddev_over_time stdvar_over_time sum
syntax keyword prometheusFunction sum_over_time sum_over_time tan tanh time timestamp vector
syntax keyword prometheusFunction year

syntax match prometheusComment '#.*'

syntax match prometheusOperator "\v[\+\-\*\/\%\^\=]"
syntax match prometheusOperator "\v\=\="
syntax match prometheusOperator "\v\!\="
syntax match prometheusOperator "\v\>"
syntax match prometheusOperator "\v\>\="
syntax match prometheusOperator "\v\<"
syntax match prometheusOperator "\v\<\="
syntax match prometheusOperator "\v\=\~"
syntax match prometheusOperator "\v\!\~"

syntax match prometheusSpecial "\v[()]"

" From https://raw.githubusercontent.com/prometheus/prometheus/main/docs/querying/operators.md
syntax keyword prometheusAggrOperator and or unless on ignoring group_left group_right
syntax keyword prometheusAggrOperator sum min max avg group stddev stdvar count
syntax keyword prometheusAggrOperator count_values bottomk topk quantile

syntax match prometheusRangeSelector "\d\+[smhdwy]"
syntax match prometheusRangeSelector "offset"

syntax region String start=+\z(#*\)\z("\)+ skip="\\\z2" end="\z2\z1"

highlight link prometheusKeyword Keyword
highlight link prometheusRangeSelector Keyword
highlight link prometheusComment Comment
highlight link prometheusOperator Operator
highlight link prometheusAggrOperator Operator
highlight link prometheusFunction Function
highlight link prometheusSpecial Special
highlight link promqlParenError Error

highlight Function ctermfg=DarkGreen
highlight Operator ctermfg=DarkCyan
